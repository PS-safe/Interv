basePath: /api
definitions:
  CurrentUserResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - created_at
    - id
    - role
    - updated_at
    - username
    type: object
  GetObjectBody:
    properties:
      bucketName:
        type: string
      objectName:
        type: string
    required:
    - bucketName
    - objectName
    type: object
  LoginBody:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  UserCreateBody:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
  UserDeleteBody:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  VideoInterviewContextResponse:
    properties:
      questionSetting:
        items:
          $ref: '#/definitions/VideoInterviewQuestionSetting'
        type: array
      totalQuestions:
        type: integer
    required:
    - questionSetting
    - totalQuestions
    type: object
  VideoInterviewQuestionResponse:
    properties:
      question:
        type: string
      questionIndex:
        type: integer
    required:
    - question
    - questionIndex
    type: object
  VideoInterviewQuestionSetting:
    properties:
      isLast:
        type: boolean
      questionIndex:
        type: integer
      retry:
        type: integer
      timeToAnswer:
        type: integer
      timeToPrepare:
        type: integer
    required:
    - isLast
    - questionIndex
    - retry
    - timeToAnswer
    - timeToPrepare
    type: object
  handlers.ErrResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      timestamp:
        type: string
    type: object
  handlers.OkResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      timestamp:
        type: string
    type: object
  handlers.Response-CurrentUserResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/CurrentUserResponse'
      message:
        type: string
      timestamp:
        type: string
    type: object
  handlers.Response-User:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/User'
      message:
        type: string
      timestamp:
        type: string
    type: object
  handlers.Response-VideoInterviewContextResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/VideoInterviewContextResponse'
      message:
        type: string
      timestamp:
        type: string
    type: object
  handlers.Response-VideoInterviewQuestionResponse:
    properties:
      code:
        type: integer
      data:
        $ref: '#/definitions/VideoInterviewQuestionResponse'
      message:
        type: string
      timestamp:
        type: string
    type: object
  handlers.Response-string:
    properties:
      code:
        type: integer
      data:
        type: string
      message:
        type: string
      timestamp:
        type: string
    type: object
info:
  contact: {}
  title: Interv API
  version: "1.0"
paths:
  /auth.login:
    post:
      consumes:
      - application/json
      operationId: login
      parameters:
      - description: LoginBody
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Login to the system
      tags:
      - authentication
  /auth.logout:
    post:
      consumes:
      - application/json
      operationId: logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.OkResponse'
      summary: Logout from the system
      tags:
      - authentication
  /auth.me:
    get:
      consumes:
      - application/json
      operationId: me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-CurrentUserResponse'
      summary: Get current user in the system
      tags:
      - authentication
  /object.getObject:
    post:
      operationId: getObject
      parameters:
      - description: Get Object Body
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/GetObjectBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get object from the system
      tags:
      - object
  /object.uploadObject:
    post:
      consumes:
      - multipart/form-data
      operationId: uploadObject
      parameters:
      - description: Video Interview File
        in: formData
        name: file
        required: true
        type: file
      - description: Bucket Name
        in: formData
        name: bucketName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Upload object to the system
      tags:
      - object
  /user.createUser:
    post:
      consumes:
      - application/json
      operationId: createUser
      parameters:
      - description: CreateUserBody
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserCreateBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Create new user
      tags:
      - user
  /user.deleteUser:
    post:
      consumes:
      - application/json
      operationId: deleteUser
      parameters:
      - description: DeleteUserBody
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/UserDeleteBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Delete user
      tags:
      - user
  /videoInterview.getVideoInterviewContext:
    get:
      consumes:
      - application/json
      operationId: getVideoInterviewContext
      parameters:
      - in: query
        name: lobbyId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-VideoInterviewContextResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get video interview context
      tags:
      - videoInterview
  /videoInterview.getVideoInterviewQuestion:
    get:
      consumes:
      - application/json
      operationId: getVideoInterviewQuestion
      parameters:
      - in: query
        name: lobbyId
        required: true
        type: string
      - in: query
        name: questionIndex
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-VideoInterviewQuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Get video interview question
      tags:
      - videoInterview
  /videoInterview.submitVideoInterview:
    post:
      consumes:
      - multipart/form-data
      operationId: submitVideoInterview
      parameters:
      - description: Video Interview File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response-string'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrResponse'
      summary: Submit video interview
      tags:
      - videoInterview
swagger: "2.0"
