// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth.login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login to the system",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "LoginBody",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/auth.logout": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Logout from the system",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.OkResponse"
                        }
                    }
                }
            }
        },
        "/auth.me": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Get current user in the system",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-CurrentUserResponse"
                        }
                    }
                }
            }
        },
        "/codingInterview.generateCompileToken": {
            "post": {
                "description": "Generate compile token for a coding interview",
        "/mail.sendMail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "codingInterview"
                ],
                "summary": "Generate compile token for a coding interview",
                "operationId": "GenerateCompileToken",
                "parameters": [
                    {
                        "description": "Request body containing the code to be compiled",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CodingInterviewGenerateCompileTokenQuery"
                    "mail"
                ],
                "summary": "Send mail to the user",
                "operationId": "sendMail",
                "parameters": [
                    {
                        "description": "Mail details",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SendMailBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the compile token",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-CodingInterviewGenerateCompileTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/codingInterview.getCompileResult/{token}": {
            "get": {
                "description": "Get compile result for a coding interview",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "codingInterview"
                ],
                "summary": "Get compile result for a coding interview",
                "operationId": "GetCompileResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Token to get the compile result",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with the compile result",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-CodingInterviewGetCompileResultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/codingInterview.getQuestions": {
            "get": {
                "description": "Get coding interview questions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "codingInterview"
                ],
                "summary": "Get coding interview questions",
                "operationId": "GetQuestions",
                "responses": {
                    "200": {
                        "description": "Successful response with the coding interview questions",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-CodingInterviewGetQuestionsResponse"
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/object.getObject": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "object"
                ],
                "summary": "Get object from the system",
                "operationId": "getObject",
                "parameters": [
                    {
                        "description": "Get Object Body",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetObjectBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/object.uploadObject": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "object"
                ],
                "summary": "Upload object to the system",
                "operationId": "uploadObject",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video Interview File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bucket Name",
                        "name": "bucketName",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user.createUser": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Create new user",
                "operationId": "createUser",
                "parameters": [
                    {
                        "description": "CreateUserBody",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/user.deleteUser": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "description": "DeleteUserBody",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserDeleteBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/videoInterview.getVideoInterviewContext": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videoInterview"
                ],
                "summary": "Get video interview context",
                "operationId": "getVideoInterviewContext",
                "parameters": [
                    {
                        "type": "string",
                        "name": "lobbyId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-VideoInterviewContextResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/videoInterview.getVideoInterviewQuestion": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videoInterview"
                ],
                "summary": "Get video interview question",
                "operationId": "getVideoInterviewQuestion",
                "parameters": [
                    {
                        "type": "string",
                        "name": "lobbyId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "questionIndex",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-VideoInterviewQuestionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        },
        "/videoInterview.submitVideoInterview": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "videoInterview"
                ],
                "summary": "Submit video interview",
                "operationId": "submitVideoInterview",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Video Interview File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.Response-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CodingInterviewGenerateCompileTokenQuery": {
            "type": "object",
            "required": [
                "body"
            ],
            "properties": {
                "body": {
                    "$ref": "#/definitions/domains.CompilationRequest"
                }
            }
        },
        "CodingInterviewGenerateCompileTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "CodingInterviewGetCompileResultResponse": {
            "type": "object",
            "properties": {
                "compileResult": {
                    "$ref": "#/definitions/domains.CompilationResultResponse"
                }
            }
        },
        "CodingInterviewGetQuestionsResponse": {
            "type": "object",
            "properties": {
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domains.CodingQuestionResponse"
                    }
                }
            }
        },
        "CurrentUserResponse": {
            "type": "object",
            "required": [
                "created_at",
                "id",
                "role",
                "updated_at",
                "username"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "GetObjectBody": {
            "type": "object",
            "required": [
                "bucketName",
                "objectName"
            ],
            "properties": {
                "bucketName": {
                    "type": "string"
                },
                "objectName": {
                    "type": "string"
                }
            }
        },
        "LoginBody": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "MailObject": {
            "type": "object",
            "required": [
                "name",
                "to"
            ],
            "properties": {
                "dueDate": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "SendMailBody": {
            "type": "object",
            "required": [
                "mailList",
                "preset"
            ],
            "properties": {
                "mailList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MailObject"
                    }
                },
                "preset": {
                    "$ref": "#/definitions/handlers.MailPreset"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UserCreateBody": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "UserDeleteBody": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "VideoInterviewContextResponse": {
            "type": "object",
            "required": [
                "questionSetting",
                "totalQuestions"
            ],
            "properties": {
                "questionSetting": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/VideoInterviewQuestionSetting"
                    }
                },
                "totalQuestions": {
                    "type": "integer"
                }
            }
        },
        "VideoInterviewQuestionResponse": {
            "type": "object",
            "required": [
                "question",
                "questionIndex"
            ],
            "properties": {
                "question": {
                    "type": "string"
                },
                "questionIndex": {
                    "type": "integer"
                }
            }
        },
        "VideoInterviewQuestionSetting": {
            "type": "object",
            "required": [
                "isLast",
                "questionIndex",
                "retry",
                "timeToAnswer",
                "timeToPrepare"
            ],
            "properties": {
                "isLast": {
                    "type": "boolean"
                },
                "questionIndex": {
                    "type": "integer"
                },
                "retry": {
                    "type": "integer"
                },
                "timeToAnswer": {
                    "type": "integer"
                },
                "timeToPrepare": {
                    "type": "integer"
                }
            }
        },
        "domains.CodingQuestion": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "difficulty": {
                    "type": "string"
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domains.CodingQuestionExample"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "testCases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domains.CodingQuestionTestCase"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            }
        },
        "domains.CodingQuestionExample": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "input": {
                    "type": "string"
                },
                "output": {
                    "type": "string"
                },
                "question": {
                    "$ref": "#/definitions/domains.CodingQuestion"
                },
                "questionID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domains.CodingQuestionResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "example_input": {
                    "type": "string"
                },
                "example_output": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "test_case": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domains.CodingQuestionTestCase"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "domains.CodingQuestionTestCase": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "expectedOutput": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "input": {
                    "type": "string"
                },
                "isHidden": {
                    "type": "boolean"
                },
                "question": {
                    "$ref": "#/definitions/domains.CodingQuestion"
                },
                "questionID": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "domains.CompilationRequest": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "string"
                },
                "language": {
                    "type": "integer"
                },
                "source_code": {
                    "type": "string"
                }
            }
        },
        "domains.CompilationResultResponse": {
            "type": "object",
            "properties": {
                "compile_output": {
                    "type": "string"
                },
                "memory": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "object",
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        }
                    }
                },
                "stderr": {
                    "type": "string"
                },
                "stdout": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "handlers.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.MailPreset": {
            "type": "string",
            "enum": [
                "invite",
                "finish"
            ],
            "x-enum-varnames": [
                "Invite",
                "Finish"
            ]
        },
        "handlers.OkResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-CodingInterviewGenerateCompileTokenResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CodingInterviewGenerateCompileTokenResponse"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-CodingInterviewGetCompileResultResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CodingInterviewGetCompileResultResponse"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-CodingInterviewGetQuestionsResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CodingInterviewGetQuestionsResponse"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-CurrentUserResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/CurrentUserResponse"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/User"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-VideoInterviewContextResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/VideoInterviewContextResponse"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-VideoInterviewQuestionResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/VideoInterviewQuestionResponse"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "handlers.Response-string": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Interv API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
